#!/bin/bash

##
##  Copyright 2016 SRI International
##  See COPYING file distributed along with the package for the copyright and license terms.
##
##  $HeadURL: https://www.nitrc.org/svn/ncanda-datacore/trunk/utils/update_csv_summaries $
##  $Revision: 2692 $
##  $LastChangedDate: 2017-05-04 00:45:18 -0700 (Thu, 04 May 2017) $
##  $LastChangedBy: dj0330 $
##

bindir=$(dirname $0)
currdir=$PWD

if [ $# -lt 2 ]; then
  echo "Please provide source and destination directories."
  echo "Optional: if followed by "
  echo "0 or 1 = structural summaries are created (1) or not (0) - default they are created" 
  echo "0 or 1 = diffusion summaries are created (1) or not (0) - default they are created" 
  exit 1
fi

srcdir=$1
dstdir=$2

structuralFlag=$3
if [ "$structuralFlag" == "" ]; then
    structuralFlag=1
fi 

diffusionFlag=$4
if [ "$diffusionFlag" == "" ]; then
    diffusionFlag=1
fi 

[ -d ${dstdir} ] || mkdir -p ${dstdir}

#
# redcap measures
#
if true; then
  [ -d ${dstdir}/redcap ] || mkdir -p ${dstdir}/redcap
  
  # These are all the baseline measures
  measures="ataxia biological_mr biological_np brief cddr clinical cnp dd100 dd1000 demographics ehi grooved_pegboard highrisk ishihara landoltc limesurvey_ssaga_parent limesurvey_ssaga_youth locked_forms mri_report mri_stroop mr_session_report np_reyosterrieth_complex_figure_files parentreport participant_last_use_summary pasat rey-o saliva_samples sleep_behavior ssaga_parent ssaga_youth stroop wais4 wrat4 youthreport1 youthreport1b youthreport2" 
  for m in ${measures}; do
    files="$(ls ${srcdir}/*/*/*/measures/${m}.csv 2>/dev/null)"
    if [ "$files" != ""  ]; then 
       ${bindir}/concat_csv ${dstdir}/redcap/${m}.csv ${files}
    else 
	echo "Skipping ${m}"
    fi  
  done
fi

if [ "$structuralFlag" == "0" -a  "$diffusionFlag" == "0" ]; then
   exit 0 
fi 


# make last visit list
full_list=`ls -d --color=no ${srcdir}/*/*/*/structural/volumetry | grep 'baseline\|followup_1y\|followup_2y'`
last_list=
prev_s=
prev_l=
for l in ${full_list} 0; do
  s=`echo ${l} | rev | cut -d "/" -f5 | rev`
  if [ "${prev_s}" != "" ] && [ "${prev_s}" != "${s}" ]; then
    last_list="${last_list} ${prev_l}"
  fi
  prev_s=${s}
  prev_l=`echo ${l} | rev | cut -d "/" -f3- | rev`
done


#
# structural sri24 measures
#
if [ "$structuralFlag" == "1" ]; then
  # These are all the MR measurements extracted by our pipeline 
  [ -d ${dstdir}/structural/cross-sectional/sri24 ] || mkdir -p ${dstdir}/structural/cross-sectional/sri24
  [ -d ${dstdir}/structural/longitudinal/sri24 ] || mkdir -p ${dstdir}/structural/longitudinal/sri24
  
  parc="icv parc116 suptent ventricles wm400 postfossa_dmid inftent"
  for TYPE in atropos atropos_hs atropos_masked; do 
    VolMeasType=volumetry/sri24_padded/$TYPE
    for p in ${parc}; do
      # cross-sectional
      ${bindir}/concat_csv ${dstdir}/structural/cross-sectional/sri24/${TYPE}_${p}.csv ${srcdir}/*/*/*/structural/${VolMeasType}/${p}.csv
      ${bindir}/concat_csv ${dstdir}/structural/cross-sectional/sri24/${TYPE}_${p}_scale.csv ${srcdir}/*/*/*/structural/${VolMeasType}/${p}_scale.csv
      # longitudinal
      csv_list=
      csv_scale_list=
      for l in ${last_list}; do
        visit=`echo ${l} | rev | cut -d "/" -f1 | rev`
        if [ "${visit}" == "baseline" ]; then
          csv_list="${csv_list} `ls --color=no ${l}/structural/${VolMeasType}/${p}.csv 2> /dev/null`"
          csv_scale_list="${csv_scale_list} `ls --color=no ${l}/structural/${VolMeasType}/${p}_scale.csv 2> /dev/null`"
        else
          csv_list="${csv_list} `ls --color=no ${l}/structural/longitudinal/${VolMeasType}/*/${p}.csv 2> /dev/null`"
          csv_scale_list="${csv_scale_list} `ls --color=no ${l}/structural/longitudinal/${VolMeasType}/*/${p}_scale.csv 2> /dev/null`"
        fi
      done
      ${bindir}/concat_csv ${dstdir}/structural/longitudinal/sri24/${TYPE}_${p}.csv ${csv_list}
      ${bindir}/concat_csv ${dstdir}/structural/longitudinal/sri24/${TYPE}_${p}_scale.csv ${csv_scale_list}
    done
  done
fi 

#
# structural freesurfer measures
#
if [ "$structuralFlag" == "1" ]; then
  [ -d ${dstdir}/structural/cross-sectional/freesurfer ] || mkdir -p ${dstdir}/structural/cross-sectional/freesurfer
  [ -d ${dstdir}/structural/longitudinal/freesurfer ] || mkdir -p ${dstdir}/structural/longitudinal/freesurfer
  
  for type in aseg lh.aparc.DKTatlas40 lh.w-g.pct rh.BA wmparc lh.BA rh.aparc.a2009s rh.BA.thresh lh.aparc.a2009s lh.BA.thresh rh.aparc  rh.entorhinal_exvivo lh.aparc lh.entorhinal_exvivo rh.aparc.DKTatlas40  rh.w-g.pct; do
    # cross-sectional
    ${bindir}/concat_csv ${dstdir}/structural/cross-sectional/freesurfer/${type}.csv ${srcdir}/*/*/*/structural/freesurfer_refined/NCANDA_S*/measures/${type}.csv
    # longitudinal
    csv_list=
    for l in ${last_list}; do
      visit=`echo ${l} | rev | cut -d "/" -f1 | rev`
      if [ "${visit}" == "baseline" ]; then
        csv_list="${csv_list} `ls --color=no ${l}/structural/freesurfer_refined/NCANDA_S*/measures/${type}.csv 2> /dev/null`"
      else
        csv_list="${csv_list} `ls --color=no ${l}/structural/longitudinal/freesurfer_refined/*.long.template*/measures/${type}.csv 2> /dev/null`"
      fi
    done
    ${bindir}/concat_csv ${dstdir}/structural/longitudinal/freesurfer/${type}.csv ${csv_list}
  done
fi

#
# diffusion measures
#
diffusionReport()
{
  local filePrefix=$1
  local filePostfix=$2
  for MOD in fa l1 lt md; do 
    FILE="${filePrefix}_${MOD}${filePostfix}"
    ${bindir}/concat_csv ${dstdir}/diffusion/pepolar/${FILE} ${srcdir}/*/*/baseline/diffusion/pepolar/measures/${FILE} ${srcdir}/*/*/followup_1y/diffusion/pepolar/measures/${FILE}
  done
}

if [ "$diffusionFlag" == "1" ]; then 
  [ -d ${dstdir}/diffusion/pepolar ] || mkdir -p ${dstdir}/diffusion/pepolar

  #diffusionReport mori_warp_refine .csv

  diffusionReport mori_ncanda_baseline_meet_criteria _skeleton.csv
  diffusionReport mori_ncanda_baseline_meet_criteria _corrected_global_skeleton.csv
  diffusionReport mori_ncanda_baseline_meet_criteria _corrected_global_add_skeleton.csv
  diffusionReport mori_ncanda_baseline_meet_criteria _corrected_local_mul_skeleton.csv
  diffusionReport mori_ncanda_baseline_meet_criteria _corrected_local_add_skeleton.csv
fi 


# cd ${srcdir}
# ${currdir}/${bindir}/xnat_lookup.py -k -r -o ${dstdir}/subject_ids.csv NCANDA_S0*

