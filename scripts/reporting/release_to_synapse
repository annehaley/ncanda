#!/usr/bin/env python
##
##  Copyright 2015 SRI International
##  License: https://ncanda.sri.com/software-license.txt
##
"""
release_to_synapse
============================================
This script uploads release csvs to synapse
"""

import os
from os import listdir
from os.path import isfile, join
import sys
import yaml
import datetime

import synapseclient
from synapseclient import Project, Folder, File

today =  datetime.date.today()
release_name = "NCANDA Public 00001"

def filecollector(mypath):
    return [join(mypath,f) for f in listdir(mypath) if isfile(join(mypath,f))]

def main(args):
    clinical_files = filecollector(join(args.releasedir,'clinical'))
    np_files = filecollector(join(args.releasedir,'neuropsych'))
    mri_files = filecollector(join(args.releasedir,'imaging'))
    dd_files = filecollector(join(args.releasedir,'datadic'))

    ###Log In###
    syn = synapseclient.Synapse()
    config = yaml.load(open(os.path.join(os.path.expanduser("~"),".server_config/synapse.cfg")))
    syn.login(config.get('user'), config.get('password'))

    ###Select Project###
    project = syn.get('syn3565171')

    ###Creating Release Folder in Project###
    release_folder = Folder(release_name, description = release_name, parent=project)
    release_folder = syn.store(release_folder)

    ###Uploading CSV Files###
    #####Uploading Clincal Tables#####
    if args.clinical:
        clinical_folder = Folder('clinical', description = 'This folder contains all clinical data points.', parent=release_folder)
        clinical_folder = syn.store(clinical_folder)
        for f in clinical_files:
            data_file = File(f, description = "Clinical Data from {}".format(release_name), parent = clinical_folder)
            data_file = syn.store(data_file)

    #####Uploading Neuropsychological Tables#####
    if args.neuropsych:
        neuropsychological_folder = Folder('neuropsych', description = 'This folder contains all neuropsychological data points.', parent=release_folder)
        neuropsychological_folder = syn.store(neuropsychological_folder)
        for f in np_files:
            data_file = File(f, description = "Neuropsychological Data from {}".format(release_name), parent = neuropsychological_folder)
            data_file = syn.store(data_file)

    #####Uploading Imaging Tables#####
    if args.imaging:
        imaging_folder = Folder('imaging', description = 'This folder contains all data points collected from neuroimaging.', parent=release_folder)
        imaging_folder = syn.store(imaging_folder)
        for f in mri_files:
            data_file = File(f, description = "Imaging Data {}".format(release_name), parent = imaging_folder)
            data_file = syn.store(data_file)

    #####Uploading Data Dictionary Tables#####
    datadic_folder = Folder('data dictionary', description = 'This folder contains all data dictionaries', parent=release_folder)
    datadic_folder = syn.store(datadic_folder)
    for f in dd_files:
        data_file = File(f, description = "Data Dictionary {}".format(release_name), parent = datadic_folder)
        data_file = syn.store(data_file)

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument( "releasedir", help="Root directory of the public release.", action="store")
    parser.add_argument( "releasename", help="Name of the public release.", action="store")
    parser.add_argument( "-c", "--clinical", help="Flag to upload clinical data.", action="store_true")
    parser.add_argument( "-n", "--neuropsych", help="Flag to upload neuropsych data.", action="store_true")
    parser.add_argument( "-i", "--imaging", help="Flag to upload imaging data.", action="store_true")
    argv = parser.parse_args()
    sys.exit(main(args=argv))
