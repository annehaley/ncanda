#!/usr/bin/env python

##
##  See COPYING file distributed along with the ncanda-data-integration package
##  for the copyright and license terms
##

import os
import argparse
import re
import sys
import hashlib

import pandas

import redcap
import sibispy
from sibispy import sibislogger as slog

# Setup command line parser
parser = argparse.ArgumentParser( description="Upload e-Prime Stroop log file to file upload file in REDCap data entry form" )
parser.add_argument( "-v", "--verbose", help="Verbose operation", action="store_true")
parser.add_argument( "--project", help="REDCAP project (import_laptops, import_webcnp, or data_entry)", default="import" )
parser.add_argument( "--record", help="Record ID (if not provided, this is generated from the information in the data file)", default=None )
parser.add_argument( "--event", help="Event in a longitudinal REDCap project (if not provided, a non-longitudinal project is assumed)", default=None )
parser.add_argument( "infile", help="Input .txt Stroop file (as generated by e-Prime).")
parser.add_argument( "tofield", help="Field to upload to")
parser.add_argument("-p", "--post-to-github", help="Post all issues to GitHub instead of std out.", action="store_true")
args = parser.parse_args()

# Set up session  
slog.init_log(args.verbose, args.post_to_github,'NCANDA Pipeline Feeder Messages', 'eprime2redcap')
session = sibispy.Session()
if not session.configure() :
    if args.verbose:
        print "Error: session configure file was not found"
 
    sys.exit()

project = session.connect_server(args.project) 
if not project : 
    if args.verbose:
        print "Error: Could not connect to Redcap" 

    sys.exit()

file = open( args.infile, 'r').read().decode('utf-16').split("\r\n")
    
date_of_test = None
subject = None
session = None

# Read ePrime log file and parse out subject, session, and date of test.
for s in file:
    if 'SessionDate:' in s:
        date_of_test = '%s-%s-%s' % (s[19:23], s[13:15], s[16:18])
    
    match = re.match( 'Subject:[^0-9]*([0-9]{1,5})', s )
    if match:
        subject = ("0000%s" % match.group(1))[-4:]
    match = re.match( 'Session:[^0-9]*([0-9]{1,5})', s )
    if match:
        session = ("0000%s" % match.group(1))[-4:]

if not subject or not session or not date_of_test:
    sys.exit( "ERROR: no subject, session ID, or test date in Stroop file %s" % args.infile )

# Reconstruct actual N-CANDA Subject ID
digit_to_site = { '1': 'A', '2': 'B', '3': 'C', '4': 'D', '5': 'E', '6': 'F', '7': 'G', '8': 'H', '9': 'I', '0': 'J' }
digit_to_sex = { '1': 'M', '2': 'F', '3': 'X', '4': 'X', '5': 'X', '6': 'X', '7': 'X', '8': 'X', '9': 'T', '0': 'X' }

subject_id = '%s-%s%s-%s-%s' % ( digit_to_site[subject[0]], subject[1:4], session[0:2], digit_to_sex[session[2]], session[3] )

if args.record:
    record_id = args.record
else:
    record_id = '%s-%s' % ( subject_id, date_of_test )

# Upload given file to REDCap
file = open( args.infile, 'rb')
try:
    response = project.import_file( record=record_id, event=args.event, field=args.tofield, fname=os.path.basename(args.infile), fobj=file )
except redcap.RedcapError:
    # Your import didn't work
    sys.exit( "ERROR: file upload did not work" )
    pass
finally:
    file.close()
